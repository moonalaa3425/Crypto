def generate_matrix(keyword):
    chars = "ABCDEFGHIKLMNOPQRSTUVWXYZ"
    key = "".join(sorted(set(keyword.upper().replace("J", "I")), key=keyword.index))  # إزالة التكرار مع الحفاظ على الترتيب
    grid = list(key) + [c for c in chars if c not in key]  # إدراج باقي الحروف بعد الكلمة المفتاحية

    matrix = [grid[i:i+5] for i in range(0, 25, 5)]  # تقسيمها إلى 5x5

    print("\nPlayfair Matrix:")
    for row in matrix:
        print(" | ".join(row))  
    print("-" * 20)

    return matrix

def locate(matrix, ch):
    for r, row in enumerate(matrix):
        if ch in row:
            return r, row.index(ch)

def process_text(text, grid, mode):
    text = text.upper().replace("J", "I").replace(" ", "")
    if len(text) % 2 != 0:
        text += "X"  

    output = ""

    for i in range(0, len(text), 2):
        a, b = text[i], text[i+1]
        r1, c1 = locate(grid, a)
        r2, c2 = locate(grid, b)

        if r1 == r2:
            c1, c2 = (c1 + mode) % 5, (c2 + mode) % 5
        elif c1 == c2:
            r1, r2 = (r1 + mode) % 5, (r2 + mode) % 5
        else:
            c1, c2 = c2, c1

        output += grid[r1][c1] + grid[r2][c2]

    return output

key = input("Enter Key: ")
grid = generate_matrix(key)

mode = 1 if input("Encrypt (E) or Decrypt (D)? ").upper() == "E" else -1
text = input("Enter Text: ")
print("\nResult:", process_text(text, grid, mode))